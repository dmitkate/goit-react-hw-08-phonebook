{"version":3,"file":"static/js/656.dc6ee48f.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/Contact.js","components/Filter.jsx","components/Formin.jsx","page/ContactsView.js"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","\nimport { Button, Text, Avatar, UnorderedList, ListItem, Flex} from '@chakra-ui/react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operation';\nimport { selectFilterContacts } from 'redux/contacts/selectors';\nexport function ContactList() {\n  \n  const dispatch = useDispatch();\n  const contacts = useSelector(selectFilterContacts);  \n  const handleDalete = ({ id }) => dispatch(deleteContacts( id ));\n  return (\n   \n      <UnorderedList m='0 auto' maxW='550px'>\n        {contacts.map(({id,name,number}) => (\n          <ListItem display='flex' alignItems='center' justifyContent=\"space-between\" key={id}>\n            \n            <Flex alignItems='center'><Avatar m='10px' bg='teal' name={name} src='https://bit.ly/broken-link' />\n            <Text  fontSize='24px'>{name}: {number}</Text></Flex>    \n            \n            <Button             \n              type=\"button\"\n              onClick={() => handleDalete({id})}>\n              Delete\n            </Button>\n          </ListItem>\n        ))}\n      </UnorderedList>\n   \n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { setNameFilter } from '../redux/contacts/filterslice';\nimport { Input, Flex, Heading } from '@chakra-ui/react';\nfunction Find() {\n  const dispatch = useDispatch();\n\n  const onFilterChange = e => {\n    dispatch(setNameFilter(e.currentTarget.value));\n  };\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\">\n      <Heading textAlign=\"left\" as=\"h2\" size=\"26px\" color=\"#1B3F34\">\n        CONTACTS LIST:\n      </Heading>\n      <Input\n        maxW=\"550px\"\n        variant=\"flushed\"\n        placeholder=\"Find contact by name\"\n        name=\"search\"\n        onChange={onFilterChange}\n      />\n    </Flex>\n  );\n}\nexport default Find;\n","//import css from '../components/formin.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport React from 'react';\nimport { addContacts } from '../redux/contacts/operation';\n\nimport { Button } from '@chakra-ui/react';\nimport { selectContacts } from '../redux/contacts/selectors';\n\nimport { Input, FormLabel, useToast, FormControl } from '@chakra-ui/react';\nexport function FormIn() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const toast = useToast();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = e.target.elements.name.value;\n    const number = e.target.elements.number.value;\n    if (contacts.find(contact => contact.name === name)) {\n      toast(`${name} is already in contacts`);\n      return;\n    }\n    dispatch(addContacts({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormControl maxW=\"520px\" margin=\"35px auto\" textAlign=\"center\">\n        <FormLabel>\n          Name\n          <Input\n            margin=\"0 \"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            size=\"md\"\n            variant=\"filled\"\n            required\n          />\n        </FormLabel>\n        <FormLabel>\n          Number\n          <Input\n            margin=\"0 \"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            size=\"md\"\n            variant=\"filled\"\n            required\n          />\n        </FormLabel>\n        <Button ml=\"auto\" mr=\"auto\" type=\"submit\" bg=\"teal\" color=\"#fff\">\n          Add contact\n        </Button>\n      </FormControl>\n    </form>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { useEffect } from 'react';\nimport { ContactList } from 'components/Contact';\nimport Find from 'components/Filter';\nimport { FormIn } from 'components/Formin';\nimport { fetchContacts } from '../redux/contacts/operation';\nimport { selectIsLoading, selectError } from '../redux/contacts/selectors';\n\nimport { Spinner } from '@chakra-ui/react';\nfunction ContactsView() {\n\n    const isLoading = useSelector(selectIsLoading);\n  const isError = useSelector(selectError);\n\n  const dispatch = useDispatch();\n \n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (<>\n    <FormIn />\n\n    <Find />\n    {isLoading && <Spinner\n  \n    thickness='4px'\n    peed='0.65s'\n    emptyColor='gray.200'\n    color='blue.500'\n    size='xl'\n/>}\n    {isError && <b>{isError}</b>}\n    <ContactList />\n  </>\n  )\n\n};\n\nexport default ContactsView ;"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilterContacts","filter","toLowerCase","includes","ContactList","dispatch","useDispatch","useSelector","m","maxW","id","number","display","alignItems","justifyContent","bg","src","fontSize","type","onClick","deleteContacts","handleDalete","flexDirection","textAlign","as","size","color","variant","placeholder","onChange","e","setNameFilter","currentTarget","FormIn","toast","useToast","onSubmit","preventDefault","form","target","elements","contact","addContacts","reset","margin","pattern","title","required","ml","mr","isError","useEffect","fetchContacts","thickness","peed","emptyColor"],"sourceRoot":""}