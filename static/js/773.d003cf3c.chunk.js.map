{"version":3,"file":"static/js/773.d003cf3c.chunk.js","mappings":"yMACA,EAAuB,uBAAvB,EAAoD,sB,iBCEvCA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EACvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EAEnBC,GAAuBC,EAAAA,EAAAA,IAClC,CAACT,EALyB,SAAAC,GAAK,OAAIA,EAAMS,MAAV,IAM/B,SAACR,EAAUQ,GACT,OAAOR,EAASQ,QAAO,qBAAGC,KACnBC,cAAcC,SAASH,EAAOE,cADd,GAGxB,I,SCTI,SAASE,IACd,IAAMC,GAAWC,EAAAA,EAAAA,MACXd,GAAWe,EAAAA,EAAAA,IAAYT,GAE7B,OACE,0BACE,wBACGN,EAASgB,KAAI,gBAAEC,EAAF,EAAEA,GAAGR,EAAL,EAAKA,KAAKS,EAAV,EAAUA,OAAV,OACZ,gBAAIC,UAAWC,EAAf,UACGX,EADH,KACWS,GACT,mBACEC,UAAWC,EACXC,KAAK,SACLC,QAAS,kBAVA,SAAC,GAAD,IAAGL,EAAH,EAAGA,GAAH,OAAYJ,GAASU,EAAAA,EAAAA,IAAgBN,GAArC,CAUMO,CAAa,CAACP,GAAAA,GAApB,EAHX,sBAF4BA,EADlB,OAcrB,C,aCXD,MAbA,WACE,IAAMJ,GAAWC,EAAAA,EAAAA,MAKjB,OACE,qDAEE,kBAAOL,KAAK,SAASgB,SANF,SAAAC,GACrBb,GAASc,EAAAA,EAAAA,GAAcD,EAAEE,cAAcC,OACxC,MAOF,ECbD,EAA0B,wB,SCMnB,SAASC,IACd,IAAMjB,GAAWC,EAAAA,EAAAA,MACXd,GAAWe,EAAAA,EAAAA,IAAYjB,GAe7B,OACE,+BACE,SAAC,KAAD,CACEqB,UAAWC,EACXW,cAAe,CAAEtB,KAAM,GAAIS,OAAQ,IACnCc,SAlBe,SAAC,EAAD,GAAsC,IAAnCvB,EAAkC,EAAlCA,KAAMS,EAA4B,EAA5BA,OAAYe,EAAgB,EAAhBA,UAClCC,EAAO,CACXzB,KAAAA,EACAS,OAAAA,GAEElB,EAASmC,MAAK,SAAAC,GAAO,OAAIA,EAAQ3B,OAASA,CAArB,IACvB4B,MAAMC,QAAN,UAAiB7B,EAAjB,6BAGFI,GAAS0B,EAAAA,EAAAA,IAAYL,IACrBD,IACD,EAIG,UAKE,UAAC,KAAD,YACE,qCAEE,SAAC,KAAD,CACEZ,KAAK,OACLZ,KAAK,OACL+B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,uCAEE,SAAC,KAAD,CACErB,KAAK,MACLZ,KAAK,SACL+B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQrB,KAAK,SAAb,+BAKT,CCzBD,MAxBA,WAEI,IAAMlB,GAAYY,EAAAA,EAAAA,IAAYb,GAC1ByC,GAAU5B,EAAAA,EAAAA,IAAYX,GAEtBS,GAAWC,EAAAA,EAAAA,MAOjB,OAJA8B,EAAAA,EAAAA,YAAU,WACR/B,GAASgC,EAAAA,EAAAA,MACV,GAAE,CAAChC,KAEI,iCACN,SAACiB,EAAD,KACA,uCACA,SAAC,EAAD,IACC3B,IAAa,4CACbwC,IAAW,uBAAIA,KAChB,SAAC/B,EAAD,MAIH,C","sources":["webpack://react-homework-template/./src/components/contacts.module.css?c6e4","redux/contacts/selectors.js","components/Contact.js","components/Filter.jsx","webpack://react-homework-template/./src/components/formin.module.css?9590","components/Formin.jsx","page/ContactsView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"contacts_item__fNnIK\",\"btn\":\"contacts_btn__-YQcB\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","import css from './contacts.module.css';\n\nimport { useDispatch, useSelector} from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operation';\nimport { selectFilterContacts } from 'redux/contacts/selectors';\nexport function ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectFilterContacts);  \n  const handleDalete = ({ id }) => dispatch(deleteContacts( id ));\n  return (\n    <div>\n      <ul>\n        {contacts.map(({id,name,number}) => (\n          <li className={css.item} key={id}>\n            {name}: {number}\n            <button\n              className={css.btn}\n              type=\"button\"\n              onClick={() => handleDalete({id})}           >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { setNameFilter } from '../redux/contacts/filterslice';\nfunction Find() {\n  const dispatch = useDispatch();\n  //const filter = useSelector(state => state.filter);\n  const onFilterChange = e => {\n    dispatch(setNameFilter(e.currentTarget.value));\n  };\n  return (\n    <label>\n      Find contact by name\n      <input name=\"search\" onChange={onFilterChange} />\n    </label>\n  );\n}\nexport default Find;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"formin_section__I9TH9\"};","import css from '../components/formin.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport React from 'react';\nimport { addContacts } from '../redux/contacts/operation';\nimport { Formik, Form, Field } from 'formik';\nimport { selectContacts } from '../redux/contacts/selectors';\n\nexport function FormIn() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    const text = {\n      name,\n      number,\n    };\n    if (contacts.find(contact => contact.name === name)) {\n      alert.warning(`${name} is already in contacts`);\n      return;\n    }\n    dispatch(addContacts(text));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        className={css.section}\n        initialValues={{ name: '', number: '' }}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <label>\n            Name\n            <Field\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </label>\n          <label>\n            Number\n            <Field\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </label>\n          <button type=\"submit\">Add contact</button>\n        </Form>\n      </Formik>\n    </>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { useEffect } from 'react';\nimport { ContactList } from 'components/Contact';\nimport Find from 'components/Filter';\nimport { FormIn } from 'components/Formin';\nimport { fetchContacts } from '../redux/contacts/operation';\nimport { selectIsLoading, selectError } from '../redux/contacts/selectors';\nfunction ContactsView() {\n\n    const isLoading = useSelector(selectIsLoading);\n  const isError = useSelector(selectError);\n\n  const dispatch = useDispatch();\n \n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (<>\n    <FormIn />\n    <h2>Contacts:</h2>\n    <Find />\n    {isLoading && <b>Loading tasks...</b>}\n    {isError && <b>{isError}</b>}\n    <ContactList />\n  </>\n  )\n\n};\n\nexport default ContactsView ;"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilterContacts","createSelector","filter","name","toLowerCase","includes","ContactList","dispatch","useDispatch","useSelector","map","id","number","className","css","type","onClick","deleteContacts","handleDalete","onChange","e","setNameFilter","currentTarget","value","FormIn","initialValues","onSubmit","resetForm","text","find","contact","alert","warning","addContacts","pattern","title","required","isError","useEffect","fetchContacts"],"sourceRoot":""}